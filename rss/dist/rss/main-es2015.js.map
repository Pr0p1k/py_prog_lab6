{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/http.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feed-paginator/feed-paginator.component.ts","./src/app/feed-paginator/feed-paginator.component.html","./src/app/model/feedsource.ts","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FeedSource } from '../model/feedsource';\nimport { FeedEntry } from '../model/feed-entry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  public sendNewSource(url: string) : Observable<string> {\n    return this.http.post<string>('http://localhost:8080', url, {responseType: 'text' as 'json'});\n  }\n\n  public getFeedNames(): Observable<Array<FeedSource>> {\n    return this.http.get<Array<FeedSource>>('http://localhost:8080/feednames');\n  }\n\n  public getPage(feedname: string, pagesize: number, pagenumber: number) : Observable<Array<FeedEntry>> {\n    let params = new HttpParams().set('feed', feedname).set('ps', pagesize.toString()).set('pn', pagenumber.toString());\n    return this.http.get<Array<FeedEntry>>('http://localhost:8080', {params});\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rss';\n}\n","<app-loader></app-loader>\n<app-feed-paginator></app-feed-paginator>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FeedPaginatorComponent } from './feed-paginator/feed-paginator.component';\nimport { FormsModule } from '@angular/forms';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoaderComponent,\n    FeedPaginatorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NoopAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    InfiniteScrollModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { FeedSource } from '../model/feedsource';\nimport { FeedEntry } from '../model/feed-entry';\n\n@Component({\n  selector: 'app-feed-paginator',\n  templateUrl: './feed-paginator.component.html',\n  styleUrls: ['./feed-paginator.component.css']\n})\nexport class FeedPaginatorComponent implements OnInit {\n\n  selectedFeed = new FeedSource();\n  feeds = new Array<FeedSource>();\n  entries : FeedEntry[];\n  currentPage: number;\n  pageSize : number;\n\n  constructor(private http: HttpService) { }\n\n  ngOnInit(): void {\n    this.http.getFeedNames().subscribe(names=>{this.feeds = names});\n    this.currentPage = 0;\n    this.pageSize = 5;\n    this.entries = [];\n  }\n\n  public changeFeed() {\n    console.log(this.selectedFeed);\n    this.entries = [];\n    this.currentPage = 0;\n    this.loadEntries();\n  }\n\n  loadEntries() {\n    this.http.getPage(this.selectedFeed.feed, this.pageSize, this.currentPage).subscribe(data => {\n      let oldLength = this.entries.length;\n      this.entries = this.entries.concat(data);\n      if (document.getElementById(\"rss-wrapper\").offsetHeight < window.innerHeight && oldLength != this.entries.length) {\n        this.currentPage++;\n        this.loadEntries();\n      }\n    });\n  }\n\n  refresh() {\n    if (this.selectedFeed.source !== undefined) {\n      this.http.sendNewSource(this.selectedFeed.source).subscribe(reply=>{\n        this.changeFeed();\n      });\n    } else {\n      this.http.getFeedNames().subscribe(names=>{this.feeds = names});\n    }\n  }\n\n  onScroll() {\n    this.currentPage++;\n    this.loadEntries();\n  }\n\n}\n","<section id=\"content\">\n<mat-form-field appearance=\"fill\">\n    <mat-label>Select RSS feed</mat-label>\n    <mat-select [(ngModel)]=\"selectedFeed\" (selectionChange)=\"changeFeed()\">\n      <mat-option *ngFor=\"let feed of feeds\" [value]=\"feed\">\n        {{feed.feed}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-button (click)=\"refresh()\">Refresh</button>\n  \n<div infiniteScroll [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\" id =\"rss-wrapper\">\n    <div *ngFor=\"let entry of entries\" class=\"rss-wrapper\">\n        <h2>{{entry.name}}</h2>\n        <p class=\"article-text\" [innerHtml]=\"entry.text\">\n        </p>\n        <div id=\"entry-footer\">\n            <span class=\"footer-elem\" id=\"author\">Author: {{entry.author}}</span>\n            <span class=\"footer-elem\" id=\"time\">{{entry.published}}</span>\n            <span class=\"footer-elem\" id=\"link\"><a href=\"{{entry.link}}\">Read more</a></span>\n            <span class=\"footer-elem\" id=\"tags\">Tags: {{entry.tags}}</span>\n        </div>\n    </div>\n</div>\n</section>","export class FeedSource {\n    feed: string;\n    source: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  url: string;\n\n  constructor(private http: HttpService) { }\n\n  ngOnInit(): void {\n  }\n\n  public addSource() {\n    this.http.sendNewSource(this.url).subscribe(feedName => {\n      this.url = ' ';\n    });\n  }\n\n}\n","<section id=\"content\">\n    <mat-form-field>\n        <input matInput placeholder=\"RSS URL\" type=\"text\" [(ngModel)]=\"url\" id=\"urlInput\" class=\"input\">\n    </mat-form-field>\n    <br>\n    <button mat-raised-button (click)=\"addSource()\" class=\"input\">Add source</button>\n</section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}