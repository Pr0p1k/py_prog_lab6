{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/feed-paginator/feed-paginator.component.ts","webpack:///src/app/feed-paginator/feed-paginator.component.html","webpack:///src/app/model/feedsource.ts","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/loader/loader.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","HttpService","http","url","post","responseType","get","feedname","pagesize","pagenumber","params","set","toString","providedIn","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","FeedPaginatorComponent","selectedFeed","feeds","Array","getFeedNames","subscribe","names","currentPage","pageSize","entries","console","log","loadEntries","getPage","feed","data","oldLength","length","concat","document","getElementById","offsetHeight","window","innerHeight","source","undefined","sendNewSource","reply","changeFeed","refresh","onScroll","FeedSource","LoaderComponent","feedName","addSource","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaC,W;AAEX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;wCAEpBC,G,EAAa;AAChC,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAuB,uBAAvB,EAAgDD,GAAhD,EAAqD;AAACE,0BAAY,EAAE;AAAf,aAArD,CAAP;AACD;;;yCAEkB;AACjB,mBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAiC,iCAAjC,CAAP;AACD;;;kCAEcC,Q,EAAkBC,Q,EAAkBC,U,EAAoB;AACrE,gBAAIC,MAAM,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,MAArB,EAA6BJ,QAA7B,EAAuCI,GAAvC,CAA2C,IAA3C,EAAiDH,QAAQ,CAACI,QAAT,EAAjD,EAAsED,GAAtE,CAA0E,IAA1E,EAAgFF,UAAU,CAACG,QAAX,EAAhF,CAAb;AACA,mBAAO,KAAKV,IAAL,CAAUI,GAAV,CAAgC,uBAAhC,EAAyD;AAACI,oBAAM,EAANA;AAAD,aAAzD,CAAP;AACD;;;;;;;yBAfUT,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVY,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,KAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;wEDMaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuCaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAbJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,yFALO,EAMP,wEANO,EAOP,yEAPO,EAQP,uEARO,EASP,gFATO,EAUP,+EAVO,EAWP,yEAXO,CAaI;;;;4HAGFA,S,EAAS;AAAA,yBApBlB,2DAoBkB,EAnBlB,wEAmBkB,EAlBlB,+FAkBkB;AAlBI,oBAGtB,uEAHsB,EAItB,oEAJsB,EAKtB,qEALsB,EAMtB,0DANsB,EAOtB,yFAPsB,EAQtB,wEARsB,EAStB,yEATsB,EAUtB,uEAVsB,EAWtB,gFAXsB,EAYtB,+EAZsB,EAatB,yEAbsB;AAkBJ,S;AALE,O;;;;;wEAKXA,S,EAAS;gBAtBrB,sDAsBqB;iBAtBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,+FAHY,CADN;AAMRC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,yFALO,EAMP,wEANO,EAOP,yEAPO,EAQP,uEARO,EASP,gFATO,EAUP,+EAVO,EAWP,yEAXO,CAND;AAmBRC,qBAAS,EAAE,EAnBH;AAoBRC,qBAAS,EAAE,CAAC,2DAAD;AApBH,W;AAsBY,U;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AACE;;AACF;;;;;;AAFuC;;AACrC;;AAAA;;;;;;AAOJ;;AACI;;AAAI;;AAAc;;AAClB;;AAEA;;AACI;;AAAsC;;AAAwB;;AAC9D;;AAAoC;;AAAmB;;AACvD;;AAAoC;;AAAyB;;AAAS;;AAAI;;AAC1E;;AAAoC;;AAAoB;;AAC5D;;AACJ;;;;;;AATQ;;AAAA;;AACoB;;AAAA;;AAGkB;;AAAA;;AACF;;AAAA;;AACG;;AAAA;;AACH;;AAAA;;;;UDVnCC,sB;AAQX,wCAAoBtB,IAApB,EAAuC;AAAA;;AAAnB,eAAAA,IAAA,GAAAA,IAAA;AANpB,eAAAuB,YAAA,GAAe,IAAI,4DAAJ,EAAf;AACA,eAAAC,KAAA,GAAQ,IAAIC,KAAJ,EAAR;AAK0C;;;;qCAElC;AAAA;;AACN,iBAAKzB,IAAL,CAAU0B,YAAV,GAAyBC,SAAzB,CAAmC,UAAAC,KAAK,EAAE;AAAC,mBAAI,CAACJ,KAAL,GAAaI,KAAb;AAAmB,aAA9D;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,OAAL,GAAe,EAAf;AACD;;;uCAEmB;AAClBC,mBAAO,CAACC,GAAR,CAAY,KAAKV,YAAjB;AACA,iBAAKQ,OAAL,GAAe,EAAf;AACA,iBAAKF,WAAL,GAAmB,CAAnB;AACA,iBAAKK,WAAL;AACD;;;wCAEa;AAAA;;AACZ,iBAAKlC,IAAL,CAAUmC,OAAV,CAAkB,KAAKZ,YAAL,CAAkBa,IAApC,EAA0C,KAAKN,QAA/C,EAAyD,KAAKD,WAA9D,EAA2EF,SAA3E,CAAqF,UAAAU,IAAI,EAAI;AAC3F,kBAAIC,SAAS,GAAG,MAAI,CAACP,OAAL,CAAaQ,MAA7B;AACA,oBAAI,CAACR,OAAL,GAAe,MAAI,CAACA,OAAL,CAAaS,MAAb,CAAoBH,IAApB,CAAf;;AACA,kBAAII,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,YAAvC,GAAsDC,MAAM,CAACC,WAA7D,IAA4EP,SAAS,IAAI,MAAI,CAACP,OAAL,CAAaQ,MAA1G,EAAkH;AAChH,sBAAI,CAACV,WAAL;;AACA,sBAAI,CAACK,WAAL;AACD;AACF,aAPD;AAQD;;;oCAES;AAAA;;AACR,gBAAI,KAAKX,YAAL,CAAkBuB,MAAlB,KAA6BC,SAAjC,EAA4C;AAC1C,mBAAK/C,IAAL,CAAUgD,aAAV,CAAwB,KAAKzB,YAAL,CAAkBuB,MAA1C,EAAkDnB,SAAlD,CAA4D,UAAAsB,KAAK,EAAE;AACjE,sBAAI,CAACC,UAAL;AACD,eAFD;AAGD,aAJD,MAIO;AACL,mBAAKlD,IAAL,CAAU0B,YAAV,GAAyBC,SAAzB,CAAmC,UAAAC,KAAK,EAAE;AAAC,sBAAI,CAACJ,KAAL,GAAaI,KAAb;AAAmB,eAA9D;AACD;AACF;;;qCAEU;AACT,iBAAKC,WAAL;AACA,iBAAKK,WAAL;AACD;;;;;;;yBAhDUZ,sB,EAAsB,mI;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,ijB;AAAA;AAAA;ACVnC;;AACA;;AACI;;AAAW;;AAAe;;AAC1B;;AAAY;AAAA;AAAA,eAA0B,iBAA1B,EAA0B;AAAA,qBAAoB,IAAA4B,UAAA,EAApB;AAAgC,aAA1D;;AACV;;AAGF;;AACF;;AACA;;AAAmB;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAO;;AAEhD;;AAAkD;AAAA,qBAAY,IAAAC,QAAA,EAAZ;AAAsB,aAAtB;;AAC9C;;AAWJ;;AACA;;;;AArBgB;;AAAA;;AACmB;;AAAA;;AAOf;;AAAA;;AACO;;AAAA;;;;;;;;;wEDFd9B,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTR,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;;UAAaqC,U;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,e;AAIX,iCAAoBtD,IAApB,EAAuC;AAAA;;AAAnB,eAAAA,IAAA,GAAAA,IAAA;AAAsB;;;;qCAElC,CACP;;;sCAEkB;AAAA;;AACjB,iBAAKA,IAAL,CAAUgD,aAAV,CAAwB,KAAK/C,GAA7B,EAAkC0B,SAAlC,CAA4C,UAAA4B,QAAQ,EAAI;AACtD,oBAAI,CAACtD,GAAL,GAAW,GAAX;AACD,aAFD;AAGD;;;;;;;yBAbUqD,e,EAAe,mI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,+M;AAAA;AAAA;ACR5B;;AACI;;AACI;;AAAkD;AAAA;AAAA;;AAAlD;;AACJ;;AACA;;AACA;;AAA0B;AAAA,qBAAS,IAAAE,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAU;;AAC5E;;;;AAJ0D;;AAAA;;;;;;;;;wEDM7CF,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTxC,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAMyC,MAAM,GAAW,EAAvB;;UAMaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBC,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRvC,mBAAO,EAAE,CAAC,6DAAawC,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERG,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY9D,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB+D,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI9B,OAAO,CAAC+B,KAAR,CAAcD,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASE,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACb,OAAP,GAAiBI,wBAAjB;AACAA,8BAAwB,CAACU,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FeedSource } from '../model/feedsource';\nimport { FeedEntry } from '../model/feed-entry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  public sendNewSource(url: string) : Observable<string> {\n    return this.http.post<string>('http://localhost:8080', url, {responseType: 'text' as 'json'});\n  }\n\n  public getFeedNames(): Observable<Array<FeedSource>> {\n    return this.http.get<Array<FeedSource>>('http://localhost:8080/feednames');\n  }\n\n  public getPage(feedname: string, pagesize: number, pagenumber: number) : Observable<Array<FeedEntry>> {\n    let params = new HttpParams().set('feed', feedname).set('ps', pagesize.toString()).set('pn', pagenumber.toString());\n    return this.http.get<Array<FeedEntry>>('http://localhost:8080', {params});\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rss';\n}\n","<app-loader></app-loader>\n<app-feed-paginator></app-feed-paginator>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FeedPaginatorComponent } from './feed-paginator/feed-paginator.component';\nimport { FormsModule } from '@angular/forms';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoaderComponent,\n    FeedPaginatorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NoopAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    InfiniteScrollModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { FeedSource } from '../model/feedsource';\nimport { FeedEntry } from '../model/feed-entry';\n\n@Component({\n  selector: 'app-feed-paginator',\n  templateUrl: './feed-paginator.component.html',\n  styleUrls: ['./feed-paginator.component.css']\n})\nexport class FeedPaginatorComponent implements OnInit {\n\n  selectedFeed = new FeedSource();\n  feeds = new Array<FeedSource>();\n  entries : FeedEntry[];\n  currentPage: number;\n  pageSize : number;\n\n  constructor(private http: HttpService) { }\n\n  ngOnInit(): void {\n    this.http.getFeedNames().subscribe(names=>{this.feeds = names});\n    this.currentPage = 0;\n    this.pageSize = 5;\n    this.entries = [];\n  }\n\n  public changeFeed() {\n    console.log(this.selectedFeed);\n    this.entries = [];\n    this.currentPage = 0;\n    this.loadEntries();\n  }\n\n  loadEntries() {\n    this.http.getPage(this.selectedFeed.feed, this.pageSize, this.currentPage).subscribe(data => {\n      let oldLength = this.entries.length;\n      this.entries = this.entries.concat(data);\n      if (document.getElementById(\"rss-wrapper\").offsetHeight < window.innerHeight && oldLength != this.entries.length) {\n        this.currentPage++;\n        this.loadEntries();\n      }\n    });\n  }\n\n  refresh() {\n    if (this.selectedFeed.source !== undefined) {\n      this.http.sendNewSource(this.selectedFeed.source).subscribe(reply=>{\n        this.changeFeed();\n      });\n    } else {\n      this.http.getFeedNames().subscribe(names=>{this.feeds = names});\n    }\n  }\n\n  onScroll() {\n    this.currentPage++;\n    this.loadEntries();\n  }\n\n}\n","<section id=\"content\">\n<mat-form-field appearance=\"fill\">\n    <mat-label>Select RSS feed</mat-label>\n    <mat-select [(ngModel)]=\"selectedFeed\" (selectionChange)=\"changeFeed()\">\n      <mat-option *ngFor=\"let feed of feeds\" [value]=\"feed\">\n        {{feed.feed}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-button (click)=\"refresh()\">Refresh</button>\n  \n<div infiniteScroll [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\" id =\"rss-wrapper\">\n    <div *ngFor=\"let entry of entries\" class=\"rss-wrapper\">\n        <h2>{{entry.name}}</h2>\n        <p class=\"article-text\" [innerHtml]=\"entry.text\">\n        </p>\n        <div id=\"entry-footer\">\n            <span class=\"footer-elem\" id=\"author\">Author: {{entry.author}}</span>\n            <span class=\"footer-elem\" id=\"time\">{{entry.published}}</span>\n            <span class=\"footer-elem\" id=\"link\"><a href=\"{{entry.link}}\">Read more</a></span>\n            <span class=\"footer-elem\" id=\"tags\">Tags: {{entry.tags}}</span>\n        </div>\n    </div>\n</div>\n</section>","export class FeedSource {\n    feed: string;\n    source: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  url: string;\n\n  constructor(private http: HttpService) { }\n\n  ngOnInit(): void {\n  }\n\n  public addSource() {\n    this.http.sendNewSource(this.url).subscribe(feedName => {\n      this.url = ' ';\n    });\n  }\n\n}\n","<section id=\"content\">\n    <mat-form-field>\n        <input matInput placeholder=\"RSS URL\" type=\"text\" [(ngModel)]=\"url\" id=\"urlInput\" class=\"input\">\n    </mat-form-field>\n    <br>\n    <button mat-raised-button (click)=\"addSource()\" class=\"input\">Add source</button>\n</section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}